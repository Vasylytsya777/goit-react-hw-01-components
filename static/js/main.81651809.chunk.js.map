{"version":3,"sources":["components/profile/Profile.module.css","components/statistics/Statistics.module.css","components/profile/Profile.js","components/statistics/Statistics.js","components/friendList/friendItem/FriendItem.js","components/friendList/FriendList.js","components/transactions/Transactions.js","components/App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","className","styles","profile","description","src","alt","label","quantity","getRandomColor","color","Math","floor","random","Statistics","title","statistics","statList","map","item","style","backgroundColor","percentage","id","defaultProps","FriendItem","friend","key","isOnline","width","FriendList","friends","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81651809.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2l3Zr\",\"description\":\"Profile_description__34Ege\",\"avatar\":\"Profile_avatar__1xyU-\",\"name\":\"Profile_name__2XLgt\",\"tag\":\"Profile_tag__79MPk\",\"location\":\"Profile_location__1Uj9T\",\"stats\":\"Profile_stats__1K1L7\",\"statsItem\":\"Profile_statsItem__3kohC\",\"label\":\"Profile_label__dCphz\",\"quantity\":\"Profile_quantity__2M14-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2m9-5\",\"title\":\"Statistics_title__2KrVS\",\"statList\":\"Statistics_statList__3tJoi\",\"item\":\"Statistics_item__1DKVr\",\"label\":\"Statistics_label__301ek\",\"percentage\":\"Statistics_percentage__3RboP\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Profile.module.css\";\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  const { followers, views, likes } = stats;\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div className={styles.description}>\r\n        <img src={avatar} alt=\"Аватар пользователя\" className={styles.avatar} />\r\n        <p className={styles.name}>{name}</p>\r\n        <p className={styles.tag}>@{tag}</p>\r\n        <p className={styles.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={styles.stats}>\r\n        <li>\r\n          <span className={styles.label}>Followers</span>\r\n          <span className={styles.quantity}>{followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={styles.label}>Views</span>\r\n          <span className={styles.quantity}>{views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={styles.label}>Likes</span>\r\n          <span className={styles.quantity}>{likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number,\r\n    views: PropTypes.number,\r\n    likes: PropTypes.number,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nfunction getRandomColor() {\r\n  let color = function () {\r\n    return Math.floor(Math.random() * 256);\r\n  };\r\n  return \"rgb(\" + color() + \",\" + color() + \",\" + color() + \")\";\r\n}\r\n\r\nconst Statistics = ({ title = \" \", stats }) => {\r\n  return (\r\n    <section className={styles.statistics}>\r\n      {title && <h2 className={styles.title}>{title}</h2>}\r\n\r\n      <ul className={styles.statList}>\r\n        {stats.map((item) => (\r\n          <li\r\n            className={styles.item}\r\n            key={item.id}\r\n            style={{ backgroundColor: getRandomColor() }}\r\n          >\r\n            <span className={styles.label}>{item.label}</span>\r\n            <span className={styles.percentage}>{item.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  title: \"\",\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      label: PropTypes.string,\r\n      percentage: PropTypes.number,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FriendItem = ({ friend }, { key }) => {\r\n  return (\r\n    <li className=\"item\" key={key}>\r\n      <span className={friend.isOnline ? \"online\" : \"offline\"}></span>\r\n      <img className=\"avatar\" src={friend.avatar} alt=\"\" width=\"48\" />\r\n      <p className=\"names\">{friend.name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendItem.propTypes = {\r\n  stat: PropTypes.object,\r\n};\r\n\r\nexport default FriendItem;\r\n","import React from \"react\";\r\nimport FriendItem from \"./friendItem/FriendItem\";\r\nimport \"./friendListStyle.css\";\r\n\r\n// import PropTypes from \"prop-types\";\r\n\r\nconst FriendList = ({ friends }) => {\r\n  //   const { name, id, isOnline, avatar } = friends;\r\n  //   const status = isOnline ? online : offline;\r\n  return (\r\n    <ul className=\"friend-list\">\r\n      {friends.map((friend) => (\r\n        <FriendItem friend={friend} key={friend.id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport \"./transactiosStyle.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  //   const { type, id, amount, currency } = items;\r\n\r\n  return (\r\n    <table className=\"transaction-history\">\r\n      <thead>\r\n        <tr className=\"transactionTr\">\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <tr className=\"transactionTrItem\" key={item.id}>\r\n            <>\r\n              <td>{item.type}</td>\r\n              <td>{item.amount}</td>\r\n              <td>{item.currency}</td>\r\n            </>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.object,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\r\nimport Profile from \"../components/profile/Profile\";\r\nimport Statistics from \"./statistics/Statistics\";\r\nimport FriendList from \"./friendList/FriendList\";\r\nimport TransactionHistory from \"./transactions/Transactions\";\r\n// import user from \"../data/user.json\";\r\n// import statisticalData from \"../data/statistical-data.json\";\r\n// import friends from \"../data/friends.json\";\r\n// import transactions from \"../data/transactions.json\";\r\nimport { user, statisticalData, friends, transactions } from \"../data/index\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Profile {...user} />\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      <Statistics stats={statisticalData} />\r\n      <FriendList friends={friends} />\r\n      <TransactionHistory items={transactions} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}